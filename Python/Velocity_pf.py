# -*- coding: utf-8 -*-
"""
Created on Thu Jun 27 11:11:28 2019

@author: elena
"""
import pandas as pd             # Export to excel 
import matplotlib.pyplot as plt # Print plot
import numpy as np

from LPFMethod import longpath1          # longpath with fixed cp
from LPFMethod2 import longpath2         # longpath2 with cp iterative
from LPFMethod_PC import longpathPC      # longpathPredCorr with cp equal to Mehrotra's algorithm

from input_data import input_data
from cent_meas import cent_meas


"""     = PRINT PRIMAL FEASIBILITY SPEED CONVERGENCE = 

Compute: W = [ max|b - Ax_{k}| ] with x_{k} sequence generated by LPF2

         Z = [ max|b - Ax_{k}| ] with x_{k} sequence generated by LPF_PC

Plot the speed of the convergence of the error of feasibility
"""
i = 0

A, b, c = input_data(i)

x2, s2, u2, sig2 = longpath2(A, b, c)
dlpf = cent_meas(x2, u2, 'LPF', plot = 0)
W = dlpf['pf']

x3, s3, u3, sig3 = longpathPC(A, b, c)
ul = cent_meas(x3, u3, 'LPF Predictor corrector', plot = 0)
Z = ul['pf']

plt.figure()
plt.subplot(211)
plt.plot(W)
plt.title('Speed error LPF2')
locs, labels = plt.xticks(np.arange(0, len(W), step = 1))
plt.yscale('log')
plt.grid(b = True)

plt.subplot(212)
plt.plot(Z)
plt.title('Speed error LPF_PC')
locs, labels = plt.xticks(np.arange(0, len(Z), step = 1))
plt.yscale('log')
plt.grid(True)